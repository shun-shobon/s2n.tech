---
import { Image } from "astro:assets";
import { render } from "astro:content";
import { Icon } from "astro-icon/components";

import MyIcon from "@/assets/my-icon.png";
import Tag from "@/components/Tag.astro";
import { getPost, getPosts } from "@/features/posts/repository";
import BasicLayout from "@/layouts/BasicLayout.astro";

export async function getStaticPaths() {
	const { posts } = await getPosts({
		draft: true,
	});

	return posts.map((post) => ({
		params: { id: post.id.split("/")[0] },
	}));
}

const { id } = Astro.params;
if (!id) {
	return Astro.rewrite("/404");
}

const post = await getPost(id);
if (!post) {
	return Astro.rewrite("/404");
}

const intl = new Intl.DateTimeFormat("ja-JP");
const { Content, headings } = await render(post);
---

<BasicLayout title={post.data.title}>
	<div class="px-4 pb-4 sm:px-8 sm:pb-8">
		<div class="mx-auto grid w-full max-w-4xl justify-center gap-2 sm:gap-4">
			<h1 class="text-center text-2xl font-bold sm:text-4xl">
				{post.data.title}
			</h1>
			<div class="text-text-secondary text-center text-sm">
				{
					post.data.publishedAt ? (
						<>
							<time datetime={post.data.publishedAt}>
								{intl.format(new Date(post.data.publishedAt))}
							</time>
							公開
						</>
					) : (
						<>未公開</>
					)
				}
				{
					post.data.updatedAt ? (
						<>
							・
							<time datetime={post.data.updatedAt}>
								{intl.format(new Date(post.data.updatedAt))}
							</time>
							更新
						</>
					) : null
				}
			</div>
			<div class="flex flex-wrap justify-center gap-2">
				{post.data.tags.map((tag) => <Tag tag={tag} />)}
			</div>
		</div>
		<div class="mx-auto flex items-start justify-center gap-4 pt-4 sm:pt-8">
			<div
				class="prose prose-neutral bg-background-primary border-border w-full max-w-4xl min-w-0 rounded-2xl border p-4 shadow-lg sm:px-8 sm:py-6"
			>
				<Content />
				<hr />
				<h2>書いた人</h2>
				<div class="not-prose flex items-center gap-4">
					<a href="/">
						<Image
							src={MyIcon}
							alt=""
							widths={[64, 128]}
							sizes="64px"
							class="border-border size-16 rounded-full border"
						/>
					</a>
					<div class="flex flex-col gap-2">
						<div class="flex flex-col">
							<a href="/" class="text-lg font-bold">しゅん🌙</a>
							<a href="/" class="text-xs">@shun_shobon</a>
						</div>
						<div class="flex gap-2">
							<a
								href="https://github.com/shun-shobon"
								target="_blank"
								class="text-text-secondary hover:text-text-primary transition-colors"
							>
								<Icon
									name="simple-icons:github"
									class="size-5"
									title="GitHub"
								/>
							</a>
							<a
								href="https://x.com/shun_shobon"
								target="_blank"
								class="text-text-secondary hover:text-text-primary transition-colors"
							>
								<Icon name="simple-icons:x" class="size-5" title="X" />
							</a>
						</div>
					</div>
				</div>
			</div>
			<div
				class="bg-background-primary border-border sticky top-8 hidden max-h-[calc(100dvh-var(--spacing)*16)] w-full max-w-xs gap-2 overflow-y-auto rounded-2xl border p-4 shadow-lg xl:grid"
			>
				<div class="text-lg font-bold">目次</div>
				<ul class="list-disc pl-4">
					{
						headings
							.filter((heading) => heading.depth < 3)
							.map((heading) => (
								<li>
									<a
										href={`#${heading.slug}`}
										class="text-text-secondary hover:text-text-primary block py-0.5 transition-colors"
									>
										{heading.text}
									</a>
								</li>
							))
					}
				</ul>
			</div>
		</div>
	</div>
</BasicLayout>
